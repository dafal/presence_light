blueprint:
  name: Presence-activated Light with Quick Pass Mode
  description: >
    Allume une lumière lorsqu'une présence est détectée. Si la présence dure moins de X secondes (passage rapide), la lumière s'éteint immédiatement après la fin de la présence, sauf si la lumière était déjà allumée au moment du déclenchement.

  domain: automation
  input:
    presence_entity:
      name: Capteur de Présence
      description: Capteur de présence
      selector:
        entity:
          domain: binary_sensor
          device_class: occupancy
    light_target:
      name: Lumière
      description: Appareil lumière à contrôler
      selector:
        target:
          entity:
            domain: light
    bright_percentage:
      name: Pourcentage de Luminosité
      description: Niveau de luminosité de la lumière lorsqu'elle s'allume
      default: 100
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: '%'
    no_motion_wait:
      name: Temps d'attente
      description: Temps en secondes avant d'éteindre la lumière après la dernière détection de présence
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
    off_transition:
      name: Temps de Transition
      description: Temps en secondes pour l'extinction progressive de la lumière
      default: 0
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds
    light_sensor:
      name: Capteur de Lumière
      description: Capteur de luminosité ambiante
      default: ''
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    light_threshold:
      name: Seuil de Lumière
      description: Seuil inférieur de luminosité pour allumer la lumière
      default: 200
      selector:
        number:
          min: 0
          max: 100000
    quick_pass_time:
      name: Temps de Passage Rapide
      description: Durée maximale en secondes pour considérer un passage comme rapide
      default: 10
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: seconds

mode: restart
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input presence_entity
    from: 'off'
    to: 'on'

condition:
  - condition: template
    value_template: >
      {% if !input light_sensor != '' %}
        {{ states(!input light_sensor) | float(0) < !input light_threshold | float }}
      {% else %}
        true
      {% endif %}

action:
  - alias: "Vérifier si la lumière est déjà allumée"
    variables:
      light_entity_id: "{{ expand(!input light_target) | map(attribute='entity_id') | list | first }}"
      light_was_on: "{{ is_state(light_entity_id, 'on') }}"

  - alias: "Allumer la lumière"
    service: light.turn_on
    target: !input light_target
    data:
      brightness_pct: !input bright_percentage

  - alias: "Enregistrer l'heure de début de présence"
    variables:
      presence_start_time: "{{ now() }}"

  - alias: "Attendre la fin de la présence"
    wait_for_trigger:
      - platform: state
        entity_id: !input presence_entity
        from: 'on'
        to: 'off'

  - alias: "Calculer la durée de présence"
    variables:
      presence_duration: "{{ (as_timestamp(now()) - as_timestamp(presence_start_time)) }}"

  - alias: "Décider d'appliquer le mode passage rapide"
    choose:
      - conditions:
          - condition: template
            value_template: >
              {{ presence_duration < !input quick_pass_time and not (light_was_on | bool) }}
        sequence:
          - alias: "Éteindre la lumière après un passage rapide"
            service: light.turn_off
            target: !input light_target
            data:
              transition: !input off_transition
      default:
        - alias: "Attendre le délai avant extinction"
          delay:
            seconds: !input no_motion_wait
        - alias: "Éteindre la lumière"
          service: light.turn_off
          target: !input light_target
          data:
            transition: !input off_transition
