blueprint:
  name: Presence-activated Light with Quick Pass Mode
  description: >
    Turn on a light when presence is detected, and turn it off immediately for quick passages.
  domain: automation
  input:
    presence_entity:
      name: Presence Sensor
      description: Presence sensor device
      selector:
        entity:
          domain: binary_sensor
          device_class: occupancy
    light_target:
      name: Light
      description: Light device
      selector:
        target:
          entity:
            domain: light
    bright_percentage:
      name: Bright Percentage
      description: Brightness level that the light will turn to when turned on
      default: 100
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: '%'
    no_motion_wait:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
    off_transition:
      name: Transition time
      description: Time in seconds for the light to turn off
      default: 0
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds
    light_sensor:
      name: Light Sensor
      description: Light sensor to read from
      default: ''
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    light_threshold:
      name: Light Threshold
      description: Light sensor's lower threshold
      default: 200
      selector:
        number:
          min: 0
          max: 100000
    quick_pass_time:
      name: Quick Pass Time
      description: Maximum time in seconds to consider a quick pass
      default: 10
      selector:
        number:
          min: 1
          max: 30
          unit_of_measurement: seconds

mode: restart
max_exceeded: silent

variables:
  presence_entity: !input presence_entity
  light_sensor: !input light_sensor
  light_threshold: !input light_threshold | float(0)
  quick_pass_time: !input quick_pass_time | float(0)
  no_motion_wait: !input no_motion_wait | int(0)
  off_transition: !input off_transition
  bright_percentage: !input bright_percentage

trigger:
  - platform: state
    entity_id: !input presence_entity
    from: 'off'
    to: 'on'

condition:
  - condition: template
    value_template: >
      {% if light_sensor != '' %}
        {{ states(light_sensor) | float(0) < light_threshold }}
      {% else %}
        true
      {% endif %}

action:
  - alias: "Set presence start time"
    variables:
      presence_start_time: "{{ now() }}"
  - alias: "Turn on the light"
    service: light.turn_on
    target: !input light_target
    data:
      brightness_pct: "{{ bright_percentage }}"
  - alias: "Wait until there is no motion from device"
    wait_for_trigger:
      - platform: state
        entity_id: !input presence_entity
        from: 'on'
        to: 'off'
  - alias: "Check if presence duration is less than quick pass time"
    choose:
      - conditions:
          - condition: template
            value_template: >
              {{ (as_timestamp(now()) - as_timestamp(presence_start_time)) < quick_pass_time }}
        sequence:
          - alias: "Turn off the light immediately after quick pass"
            service: light.turn_off
            target: !input light_target
            data:
              transition: "{{ off_transition }}"
    default:
      - alias: "Wait the number of seconds set for regular pass"
        delay:
          seconds: "{{ no_motion_wait }}"
      - alias: "Turn off the light after regular pass"
        service: light.turn_off
        target: !input light_target
        data:
          transition: "{{ off_transition }}"
